{
  "extends": ["plugin:@nrwl/nx/react", "../../.eslintrc.json"],
  "ignorePatterns": ["!**/*", "jest.config.js"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "plugins": ["react"],
      "extends": ["plugin:react/recommended", "plugin:react-hooks/recommended"],
      "parserOptions": {
        "project": ["apps/timeline/tsconfig.*?.json"],
        "ecmaFeatures": {
          "jsx": true
        }
      },
      "rules": {
        "@typescript-eslint/ban-types": [
          "error",
          {
            "extendDefaults": true,
            "types": {
              "FC": "Using `FC` is generally a bad idea, see here: https://medium.com/raccoons-group/why-you-probably-shouldnt-use-react-fc-to-type-your-react-components-37ca1243dd13",
              "React.FC": "Using `FC` is generally a bad idea, see here: https://medium.com/raccoons-group/why-you-probably-shouldnt-use-react-fc-to-type-your-react-components-37ca1243dd13",
              "FunctionComponent": "Using `FC` is generally a bad idea, see here: https://medium.com/raccoons-group/why-you-probably-shouldnt-use-react-fc-to-type-your-react-components-37ca1243dd13",
              "React.FunctionComponent": " Using `FC` is generally a bad idea, see here: https://medium.com/raccoons-group/why-you-probably-shouldnt-use-react-fc-to-type-your-react-components-37ca1243dd13"
            }
          }
        ],
        "react/react-in-jsx-scope": "off",
        "react/no-unescaped-entities": "off",
        "react/display-name": "off",
        "react/no-children-prop": "off",
        "react/function-component-definition": [
          "error",
          {
            "namedComponents": "arrow-function",
            "unnamedComponents": "arrow-function"
          }
        ],
        "react/hook-use-state": "error",
        "react/no-multi-comp": "warn",
        "react/self-closing-comp": "warn",
        "react/jsx-boolean-value": "warn",
        "react/jsx-curly-brace-presence": ["warn", "never"],
        "react/jsx-fragments": "warn",
        "react/jsx-handler-names": "warn",
        "react/jsx-no-useless-fragment": [
          "warn",
          {
            "allowExpressions": true
          }
        ],
        "react/jsx-pascal-case": "warn",
        "react/no-redundant-should-component-update": "error",
        "react/jsx-no-comment-textnodes": "error",
        "react/jsx-no-constructed-context-values": "error",
        "react/no-unsafe": "error",
        "react/no-unstable-nested-components": "error",
        "react/no-this-in-sfc": "error",
        "react/no-namespace": "error",
        "react/no-access-state-in-setstate": "error",
        "react/no-arrow-function-lifecycle": "error",
        "react/no-danger": "error",
        "react/no-did-mount-set-state": "error",
        "react/no-did-update-set-state": "error",
        "react/forbid-dom-props": [
          "error",
          {
            "forbid": [
              {
                "propName": "data-testId",
                "message": "Did you mean to use `data-testid`? This will cause a React error: https://reactjs.org/warnings/unknown-prop.html"
              }
            ]
          }
        ],
        "react/forbid-component-props": [
          "error",
          {
            "forbid": [
              {
                "propName": "data-testId",
                "message": "Did you mean to use `data-testid`? This will cause a React error: https://reactjs.org/warnings/unknown-prop.html"
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["examples.ts", "examples.tsx"],
      "rules": {
        "import/no-default-export": "off",
        "tangerine/import/no-default-export": "off",
        "import/no-anonymous-default-export": "error"
      }
    },
    {
      "files": ["test.ts", "test.tsx"],
      "plugins": ["testing-library"],
      "extends": [
        "plugin:testing-library/react",
        "plugin:jest-dom/recommended"
      ],
      "rules": {
        "react/jsx-key": "off",
        // Waiting for this issue to be solved before removing the `prefer-presence-queries`: https://github.com/testing-library/eslint-plugin-testing-library/issues/518
        "testing-library/prefer-presence-queries": "off",
        "testing-library/no-await-sync-events": "error",
        "testing-library/no-container": "off",
        "testing-library/no-manual-cleanup": "error",
        "testing-library/prefer-explicit-assert": [
          "warn",
          {
            "includeFindQueries": false
          }
        ],
        "testing-library/prefer-user-event": [
          "warn",
          {
            "allowedMethods": ["keyDown", "keyUp"]
          }
        ],
        "testing-library/prefer-wait-for": "warn"
      }
    }
  ]
}
