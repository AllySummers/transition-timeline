{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nrwl/nx"],
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaystryTypes": true,
        "project": "@(libs|apps)/*/tsconfig*json"
      }
    },
    "jest": {
      "version": 28
    }
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": [
        "plugin:@nrwl/nx/typescript",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "import/no-default-export": "error",
        "import/no-namespace": "error",
        "import/order": [
          "error",
          {
            "alphabetize": {
              "caseInsensitive": true,
              "order": "asc"
            },
            "groups": ["builtin", "external", "internal", "parent", "sibling", "unknown"],
            "pathGroups": [
              {
                "group": "builtin",
                "pattern": "+(discord.js)",
                "position": "before"
              }
            ]
          }
        ],
        "import/no-duplicates": "error",
        "import/first": "error",
        "import/no-useless-path-segments": [
          "error",
          {
            "noUselessIndex": true
          }
        ],
        "import/no-mutable-exports": "error",
        "import/newline-after-import": "warn",
        "array-callback-return": "error",
        "func-style": [
          "error",
          "declaration",
          {
            "allowArrowFunctions": true
          }
        ],
        "block-scoped-var": "error",
        "no-restricted-syntax": [
          "error",
          {
            "selector": "TSEnumDeclaration",
            "message": "Don't use Enum's. Instead use `as const`."
          }
        ],
        "no-await-in-loop": "error",
        "no-constructor-return": "error",
        "no-promise-executor-return": "error",
        "no-self-compare": "error",
        "no-unmodified-loop-condition": "error",
        "no-unreachable-loop": "error",
        "no-unused-private-class-members": "error",
        "require-atomic-updates": "error",
        "@typescript-eslint/class-literal-property-style": ["error", "fields"],
        "@typescript-eslint/consistent-indexed-object-style": ["error", "record"],
        "@typescript-eslint/consistent-type-exports": [
          "error",
          {
            "fixMixedExportsWithInlineTypeSpecifier": true
          }
        ],
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "prefer": "type-imports",
            "disallowTypeAnnotations": true
          }
        ],
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/member-ordering": "warn",
        "@typescript-eslint/sort-type-union-intersection-members": "warn",
        "@typescript-eslint/unified-signatures": "warn",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-includes": "warn",
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-reduce-type-parameter": "off",
        "arrow-body-style": ["warn", "as-needed"],
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/prefer-regexp-exec": "warn",
        "@typescript-eslint/prefer-string-starts-ends-with": "warn",
        "@typescript-eslint/prefer-ts-expect-error": "error",
        "@typescript-eslint/no-require-imports": "warn",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
        "@typescript-eslint/no-unnecessary-qualifier": "warn",
        "@typescript-eslint/no-unnecessary-type-arguments": "warn",
        "@typescript-eslint/no-extraneous-class": [
          "error",
          {
            "allowWithDecorator": true
          }
        ],
        "default-case-last": "warn",
        "eqeqeq": "error",
        "no-unneeded-ternary": "warn",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "no-dupe-class-members": "off",
        "@typescript-eslint/no-dupe-class-members": "error",
        "no-duplicate-imports": "off",
        "@typescript-eslint/no-duplicate-imports": "error",
        "no-template-curly-in-string": "error",
        "@typescript-eslint/no-unused-vars": [
          "warn",
          {
            "argsIgnorePattern": "^_",
            "args": "after-used",
            "ignoreRestSiblings": true
          }
        ],
        "@typescript-eslint/no-confusing-non-null-assertion": "error",
        "@typescript-eslint/no-confusing-void-expression": [
          "error",
          {
            "ignoreArrowShorthand": true
          }
        ],
        "@typescript-eslint/no-base-to-string": "error",
        "@typescript-eslint/require-array-sort-compare": [
          "warn",
          {
            "ignoreStringArrays": true
          }
        ],
        "@typescript-eslint/no-invalid-void-type": "error",
        "no-redeclare": "off",
        "@typescript-eslint/no-redeclare": "error",
        "@typescript-eslint/no-meaningless-void-operator": "error",
        "no-loop-func": "off",
        "@typescript-eslint/no-loop-func": "error",
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/no-unnecessary-condition": "error",
        "@typescript-eslint/prefer-return-this-type": "warn",
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "default-param-last": "off",
        "@typescript-eslint/default-param-last": "warn",
        "no-return-await": "off",
        "@typescript-eslint/return-await": "error",
        "@typescript-eslint/no-explicit-any": "off",
        "quotes": "off",
        "@typescript-eslint/quotes": ["warn", "single"],
        "@typescript-eslint/adjacent-overload-signatures": "warn",
        "@typescript-eslint/array-type": [
          "warn",
          {
            "default": "array-simple"
          }
        ],
        "@typescript-eslint/ban-ts-comment": [
          "error",
          {
            "ts-expect-error": "allow-with-description",
            "minimumDescriptionLength": 5
          }
        ],
        "@typescript-eslint/consistent-type-assertions": [
          "warn",
          {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "allow-as-parameter"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": ["warn", "interface"],
        "@typescript-eslint/member-delimiter-style": [
          "warn",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            }
          }
        ],
        "@typescript-eslint/method-signature-style": ["warn", "property"],
        "@typescript-eslint/no-extra-non-null-assertion": "warn",
        "@typescript-eslint/no-inferrable-types": "warn",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
        "@typescript-eslint/no-unnecessary-type-constraint": "warn",
        "@typescript-eslint/no-unnecessary-type-assertion": "warn",
        "@typescript-eslint/non-nullable-type-assertion-style": "warn",
        "@typescript-eslint/prefer-as-const": "warn",
        "@typescript-eslint/type-annotation-spacing": "warn",
        "brace-style": "off",
        "@typescript-eslint/brace-style": [
          "error",
          "1tbs",
          {
            "allowSingleLine": true
          }
        ],
        "comma-spacing": "off",
        "@typescript-eslint/comma-spacing": "warn",
        "dot-notation": "off",
        "@typescript-eslint/dot-notation": "error",
        "func-call-spacing": "off",
        "@typescript-eslint/func-call-spacing": "error",
        "keyword-spacing": "off",
        "@typescript-eslint/keyword-spacing": "error",
        "lines-between-class-members": "off",
        "@typescript-eslint/lines-between-class-members": [
          "warn",
          {
            "exceptAfterOverload": true
          }
        ],
        "no-array-constructor": "off",
        "@typescript-eslint/no-array-constructor": "error",
        "no-empty-function": "off",
        "@typescript-eslint/no-empty-function": "off",
        "no-extra-parens": "off",
        "@typescript-eslint/no-extra-parens": "off",
        "no-extra-semi": "off",
        "@typescript-eslint/no-extra-semi": "error",
        "no-implied-eval": "off",
        "@typescript-eslint/no-implied-eval": "error",
        "no-invalid-this": "off",
        "@typescript-eslint/no-invalid-this": "error",
        "no-loss-of-precision": "off",
        "@typescript-eslint/no-loss-of-precision": "error",
        "no-magic-numbers": "off",
        "no-throw-literal": "off",
        "@typescript-eslint/no-throw-literal": "error",
        "no-unused-expressions": "off",
        "@typescript-eslint/no-unused-expressions": "error",
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false
          }
        ],
        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": "error",
        "object-curly-spacing": "off",
        "@typescript-eslint/object-curly-spacing": ["warn", "always"],
        "semi": "off",
        "@typescript-eslint/semi": "warn",
        "require-await": "off",
        "@typescript-eslint/require-await": "error",
        "space-before-function-paren": "off",
        "@typescript-eslint/space-before-function-paren": [
          "error",
          {
            "anonymous": "never",
            "named": "never",
            "asyncArrow": "always"
          }
        ]
      }
    },
    {
      "extends": ["plugin:jest/recommended"],
      "files": ["*.spec.ts", "*.spec.tsx"],
      "plugins": ["jest"],
      "env": {
        "jest": true
      },
      "rules": {
        "jest/prefer-comparison-matcher": "error",
        "jest/prefer-equality-matcher": "error",
        "jest/no-conditional-in-test": "error",
        "jest/consistent-test-it": [
          "error",
          {
            "fn": "it"
          }
        ],
        "jest/expect-expect": "warn",
        "jest/no-alias-methods": "warn",
        "jest/no-deprecated-functions": "error",
        "jest/no-conditional-expect": "error",
        "jest/no-done-callback": "error",
        "jest/no-duplicate-hooks": "error",
        "jest/no-export": "error",
        "jest/no-focused-tests": "error",
        "jest/no-identical-title": "error",
        "jest/no-if": "error",
        "jest/no-jasmine-globals": "error",
        "jest/no-mocks-import": "error",
        "jest/no-test-prefixes": "error",
        "jest/no-test-return-statement": "error",
        "jest/prefer-called-with": "warn",
        "jest/prefer-hooks-on-top": "error",
        "jest/prefer-spy-on": "error",
        "jest/prefer-strict-equal": "error",
        "jest/prefer-to-be": "warn",
        "jest/prefer-to-contain": "warn",
        "jest/prefer-to-have-length": "warn",
        "jest/prefer-todo": "warn",
        "jest/require-hook": "error",
        "jest/require-to-throw-message": "error",
        "jest/require-top-level-describe": "warn",
        "jest/valid-describe-callback": "error",
        "jest/valid-expect": "error",
        "jest/valid-expect-in-promise": "error",
        "jest/valid-title": "error"
      }
    },
    {
      "files": ["*.d.ts", "*.d.tsx"],
      "rules": {
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "prefer": "type-imports",
            "disallowTypeAnnotations": false
          }
        ]
      }
    },
    {
      "files": ["jest.*.ts", "webpack.config.ts"],
      "rules": {
        "import/no-default-export": "off"
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {}
    }
  ]
}
